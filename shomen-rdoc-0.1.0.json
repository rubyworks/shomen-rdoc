{"(metadata)":{"source":["meta","meta/"],"authors":[{"name":"trans","email":"transfire@gmail.com"}],"copyrights":[],"requirements":[{"name":"rdoc","version":"3+"},{"name":"shomen-model"},{"name":"detroit","groups":["build"],"development":true}],"dependencies":[],"alternatives":[],"conflicts":[],"repositories":[{"uri":"git://github.com/rubyworks/shomen-rdoc.git","scm":"git","name":"upstream"}],"resources":[{"uri":"http://rubyworks.github.com/shomen-rdoc","name":"home","type":"home"},{"uri":"http://github.com/rubyworks/shomen-rdoc/wiki","name":"docs","type":"doc"},{"uri":"http://github.com/rubyworks/shomen-rdoc","name":"code","type":"code"},{"uri":"http://github.com/rubyworks/shomen-rdoc/issues","name":"bugs","type":"bugs"},{"uri":"http://groups.google.com/groups/rubyworks-mailinglist","name":"mail","type":"mail"},{"uri":"http://chat.us.freenode.net/rubyworks","name":"chat","type":"chat"}],"extra":{},"load_path":["lib"],"revision":0,"created":"2010-07-01","summary":"Shomen Documentation via RDoc","title":"Shomen RDoc","version":"0.1.0","name":"shomen-rdoc","description":"Shomen RDoc provides a command line utility for generating Shomen standard\ndocumentation via the RDoc's `.rdoc` cache. It is an alternative to the\n`rdoc-shomen` format plugin.","organization":"rubyworks","date":"2012-04-19","path":"(metadata)","markup":"rdoc"},"RDoc":{"!":"module","path":"RDoc","name":"RDoc","namespace":"","includes":[],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":["RDoc::SourceCodeAccess"],"classes":["RDoc::TopLevel","RDoc::ClassModule","RDoc::AnyMethod","RDoc::Attr"],"methods":[],"accessors":[],"files":[]},"RDoc::AnyMethod":{"!":"class","path":"RDoc::AnyMethod","name":"AnyMethod","namespace":"RDoc","includes":["RDoc::SourceCodeAccess"],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":[],"accessors":[],"files":["/lib/shomen-rdoc/rdoc_ext.rb"],"superclass":"Object"},"RDoc::Attr":{"!":"class","path":"RDoc::Attr","name":"Attr","namespace":"RDoc","includes":["RDoc::SourceCodeAccess"],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":[],"accessors":[],"files":["/lib/shomen-rdoc/rdoc_ext.rb"],"superclass":"Object"},"RDoc::ClassModule":{"!":"class","path":"RDoc::ClassModule","name":"ClassModule","namespace":"RDoc","includes":[],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":["RDoc::ClassModule#with_documentation?","RDoc::ClassModule#document_self_or_methods"],"accessors":[],"files":["/lib/shomen-rdoc/rdoc_ext.rb"],"superclass":"Object"},"RDoc::SourceCodeAccess":{"!":"module","path":"RDoc::SourceCodeAccess","name":"SourceCodeAccess","namespace":"RDoc","includes":[],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":["RDoc::SourceCodeAccess#source_code_raw","RDoc::SourceCodeAccess#source_code_location"],"accessors":[],"files":["/lib/shomen-rdoc/rdoc_ext.rb"]},"RDoc::TopLevel":{"!":"class","path":"RDoc::TopLevel","name":"TopLevel","namespace":"RDoc","includes":[],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":["RDoc::TopLevel#to_h"],"accessors":[],"files":["/lib/shomen-rdoc/rdoc_ext.rb"],"superclass":"Object"},"Shomen":{"!":"module","path":"Shomen","name":"Shomen","namespace":"","includes":[],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":["Shomen::Rdoc"],"classes":[],"methods":[],"accessors":[],"files":["/lib/shomen-rdoc.rb","/lib/shomen-rdoc/command.rb","/lib/shomen-rdoc/generator.rb"]},"Shomen::Rdoc":{"!":"module","path":"Shomen::Rdoc","name":"Rdoc","namespace":"Shomen","includes":[],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":[],"classes":["Shomen::Rdoc::Command","Shomen::Rdoc::Generator"],"methods":["Shomen::Rdoc.metadata","Shomen::Rdoc.const_missing"],"accessors":[],"files":["/lib/shomen-rdoc.rb","/lib/shomen-rdoc/command.rb","/lib/shomen-rdoc/generator.rb"]},"Shomen::Rdoc::Command":{"!":"class","path":"Shomen::Rdoc::Command","name":"Command","namespace":"Shomen::Rdoc","includes":[],"extensions":[],"comment":"The Shomen RDoc command line tool provides a utility to generate\na Shomen documentation file using RDoc's .rdoc cache.\n\nExamples:\n\n    $ shomen-rdoc --readme README.md lib - [A-Z]*.*","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":["Shomen::Rdoc::Command.run","Shomen::Rdoc::Command.new","Shomen::Rdoc::Command#run","Shomen::Rdoc::Command#parse","Shomen::Rdoc::Command#parser_options","Shomen::Rdoc::Command#force?","Shomen::Rdoc::Command#root?"],"accessors":["Shomen::Rdoc::Command#options"],"files":["/lib/shomen-rdoc/command.rb"],"superclass":"Object"},"Shomen::Rdoc::Generator":{"!":"class","path":"Shomen::Rdoc::Generator","name":"Generator","namespace":"Shomen::Rdoc","includes":[],"extensions":[],"comment":"This adapter is used to convert RDoc's documentation extracted\nfrom a local store (`.rdoc`) to Shomen's pure-data format.\n\nThere's a bit of a limitation with adding scripts to the Shomen\ntable, as it appears rdoc only keeps track of script files for methods.\nSo any file thet doesn't contain at least one method definition won't\nshow up. We'll see if we can fix this in a future version.\n\nIn addition, documentation files are not tracked at all, so they have\nto provided on the command line regardless --though by default any\nREADME file will be included.\n\nWARNING: RDoc's RI::Store has some issues and presently some information\nis not accessible that otherwise would be included. B/c of this we recommend\nusing the traditional `rdoc-shomen` generator instead until these issues\nare resolved.","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":["Shomen::Rdoc::Generator.new","Shomen::Rdoc::Generator#initialize_rdoc","Shomen::Rdoc::Generator#use_cache?","Shomen::Rdoc::Generator#files","Shomen::Rdoc::Generator#generate","Shomen::Rdoc::Generator#table"],"accessors":["Shomen::Rdoc::Generator#store","Shomen::Rdoc::Generator#use_cache"],"files":["/lib/shomen-rdoc/generator.rb"],"superclass":"Shomen::Generator"},"Shomen::Rdoc.const_missing":{"!":"method","declarations":["class","public"],"path":"Shomen::Rdoc.const_missing","name":"const_missing","namespace":"Shomen::Rdoc","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":true,"interfaces":[{"signature":"const_missing(name)","arguments":[{"name":"name"}]}],"returns":[],"file":"/lib/shomen-rdoc.rb","line":16,"source":"# File lib/shomen-rdoc.rb, line 16\n    def self.const_missing(name)\n      metadata[name.to_s.downcase] || super(name)\n    end","language":"ruby"},"Shomen::Rdoc.metadata":{"!":"method","declarations":["class","public"],"path":"Shomen::Rdoc.metadata","name":"metadata","namespace":"Shomen::Rdoc","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":true,"interfaces":[{"signature":"metadata()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc.rb","line":8,"source":"# File lib/shomen-rdoc.rb, line 8\n    def self.metadata\n      @metadata ||= (\n        require 'yaml'\n        YAML.load_file(File.dirname(__FILE__) + '/shomen-rdoc.yml')\n      )\n    end","language":"ruby"},"Shomen::Rdoc::Generator.new":{"!":"method","declarations":["class","public"],"path":"Shomen::Rdoc::Generator.new","name":"new","namespace":"Shomen::Rdoc::Generator","comment":"Initialize new RDoc adaptor.","format":"rdoc","aliases":[],"alias_for":null,"singleton":true,"interfaces":[{"signature":"new(options)","arguments":[{"name":"options"}]}],"returns":[],"file":"/lib/shomen-rdoc/generator.rb","line":29,"source":"# File lib/shomen-rdoc/generator.rb, line 29\n      def initialize(options)\n        initialize_rdoc\n\n        @store = '.rdoc'\n\n        super(options)\n      end","language":"ruby"},"Shomen::Rdoc::Command.new":{"!":"method","declarations":["class","public"],"path":"Shomen::Rdoc::Command.new","name":"new","namespace":"Shomen::Rdoc::Command","comment":"Initialize new command.\n\nargv - Command line arguments. [Array]\n\nReturns CLI instance.","format":"rdoc","aliases":[],"alias_for":null,"singleton":true,"interfaces":[{"signature":"new(*argv)","arguments":[{"name":"*argv"}]}],"returns":[],"file":"/lib/shomen-rdoc/command.rb","line":33,"source":"# File lib/shomen-rdoc/command.rb, line 33\n      def initialize(*argv)\n        @options = {}\n\n        parse(argv)\n      end","language":"ruby"},"Shomen::Rdoc::Command.run":{"!":"method","declarations":["class","public"],"path":"Shomen::Rdoc::Command.run","name":"run","namespace":"Shomen::Rdoc::Command","comment":"Public: Shortcut for `CLI.new(*argv).run`.\n\nReturns nothing.","format":"rdoc","aliases":[],"alias_for":null,"singleton":true,"interfaces":[{"signature":"run(*argv)","arguments":[{"name":"*argv"}]}],"returns":[],"file":"/lib/shomen-rdoc/command.rb","line":21,"source":"# File lib/shomen-rdoc/command.rb, line 21\n      def self.run(*argv)\n        new(*argv).run\n      end","language":"ruby"},"RDoc::ClassModule#document_self_or_methods":{"!":"method","declarations":["instance","public"],"path":"RDoc::ClassModule#document_self_or_methods","name":"document_self_or_methods","namespace":"RDoc::ClassModule","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"document_self_or_methods()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/rdoc_ext.rb","line":30,"source":"# File lib/shomen-rdoc/rdoc_ext.rb, line 30\n  def document_self_or_methods\n    document_self || method_list.any?{ |m| m.document_self }\n  end","language":"ruby"},"Shomen::Rdoc::Generator#files":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Generator#files","name":"files","namespace":"Shomen::Rdoc::Generator","comment":"Files to be documented.\n\nReturns Array of file paths.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"files()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/generator.rb","line":67,"source":"# File lib/shomen-rdoc/generator.rb, line 67\n      def files\n        @files ||= (\n          list = []\n          list.concat scripts\n          list.concat documents\n          list.concat(['README*']) if list.empty?   #['lib', 'README*'] ?\n          list\n        )\n      end","language":"ruby"},"Shomen::Rdoc::Command#force?":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Command#force?","name":"force?","namespace":"Shomen::Rdoc::Command","comment":"Is `$FORCE` set?\n\nReturns true or false.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"force?()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/command.rb","line":129,"source":"# File lib/shomen-rdoc/command.rb, line 129\n      def force?\n        !!$FORCE\n      end","language":"ruby"},"Shomen::Rdoc::Generator#generate":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Generator#generate","name":"generate","namespace":"Shomen::Rdoc::Generator","comment":"Generate with RDoc as backend processor.\n\nReturns documentation table. [Hash]","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"generate()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/generator.rb","line":80,"source":"# File lib/shomen-rdoc/generator.rb, line 80\n      def generate\n        preconfigure unless use_cache?\n        generate_table\n      end","language":"ruby"},"Shomen::Rdoc::Generator#initialize_rdoc":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Generator#initialize_rdoc","name":"initialize_rdoc","namespace":"Shomen::Rdoc::Generator","comment":"Load RDoc library. Must be RDoc v3 or greater. We invoke the `gem` method\nin this method in order to ensure we are not using the rdoc library included\nwith the Ruby distribution, which is out of date.\n\nReturns nothing.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"initialize_rdoc()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/generator.rb","line":42,"source":"# File lib/shomen-rdoc/generator.rb, line 42\n      def initialize_rdoc\n        gem 'rdoc', '>3'  # rescue nil\n        require 'rdoc'\n        require 'shomen-rdoc/rdoc_ext'\n      end","language":"ruby"},"Shomen::Rdoc::Command#parse":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Command#parse","name":"parse","namespace":"Shomen::Rdoc::Command","comment":"Parse command line arguments.\n\nargv - List of command line arguments. [Array]\n\nReturns list of arguments. [Array]","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"parse(argv)","arguments":[{"name":"argv"}]}],"returns":[],"file":"/lib/shomen-rdoc/command.rb","line":53,"source":"# File lib/shomen-rdoc/command.rb, line 53\n      def parse(argv)\n        if i = argv.index('-')\n          options[:documents] = argv[i+1..-1]\n          argv = argv[0...i]\n        end\n\n        parser = OptionParser.new\n        parser_options(parser)\n        parser.parse!(argv)\n\n        if !(force? or root?)\n          $stderr.puts \"ERROR: Not a project directory. Use --force to override.\"\n          exit -1\n        end\n\n        options[:scripts] = argv\n      end","language":"ruby"},"Shomen::Rdoc::Command#parser_options":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Command#parser_options","name":"parser_options","namespace":"Shomen::Rdoc::Command","comment":"Define command line options.\n\nparser - Instance of {OptionParser}.\n\nReturns nothing.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"parser_options(parser)","arguments":[{"name":"parser"}]}],"returns":[],"file":"/lib/shomen-rdoc/command.rb","line":76,"source":"# File lib/shomen-rdoc/command.rb, line 76\n      def parser_options(parser)\n        parser.on('-j', '--json', 'output JSON instead of YAML (default)') do\n          options[:format] = :json\n        end\n        parser.on('-y', '--yaml', 'output YAML instead of JSON') do\n          options[:format] = :yaml\n        end\n\n        parser.on('-d', '--db DIR', 'documentation store directory (deafult is `.rdoc` or `.yardoc`)') do |dir|\n          options[:store] = dir\n        end\n        parser.on('-c', '--use-cache', 'do not regenerate docs, use pre-existing cache') do\n          options[:use_cache] = true\n        end\n\n        parser.on('-s', '--source', 'include full source in script documentation') do\n          options[:source] = true\n        end\n        parser.on('-w', '--webcvs URI', 'prefix link to source code') do |uri|\n          options[:webcvs] = uri\n        end\n        parser.on('-r', '--readme FILE', 'which file to use as main') do |file|\n          options[:readme] = file\n        end\n\n        #parser.on('--save', 'save options for future use') do |markup|\n        #  options[:save] = true\n        #end\n\n        # TODO: shouldn't this be in .yardopts?\n        parser.on('--markup TYPE', 'markup type used for comments (rdoc, md, tomdoc)') do |markup|\n          options[:markup] = markup.to_sym\n        end\n\n        parser.on('-F', '--force') do\n          $FORCE = true\n        end\n\n        parser.on_tail('--debug', 'run with $DEBUG set to true') do\n          $DEBUG = true\n        end\n        parser.on_tail('--warn', 'run with $VERBOSE set to true') do\n          $VERBOSE = true\n        end\n\n        parser.on_tail('--help', 'see this help message') do\n          puts parser; exit -1\n        end\n      end","language":"ruby"},"Shomen::Rdoc::Command#root?":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Command#root?","name":"root?","namespace":"Shomen::Rdoc::Command","comment":"Is this a project directory?\n\nReturns true or false.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"root?()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/command.rb","line":136,"source":"# File lib/shomen-rdoc/command.rb, line 136\n      def root?\n        root = false\n        root = true if File.exist?('.ruby')\n        root = true if File.exist?('.yardoc')\n        root = true if File.exist?('.rdoc')\n        root = true if File.exist?('.git')\n        root = true if File.exist?('.hg')\n        root = true if File.exist?('_darcs')\n        root\n      end","language":"ruby"},"Shomen::Rdoc::Command#run":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Command#run","name":"run","namespace":"Shomen::Rdoc::Command","comment":"Public: Run command.\n\nReturns nothing.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"run()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/command.rb","line":42,"source":"# File lib/shomen-rdoc/command.rb, line 42\n      def run\n        generator = Generator.new(options)\n        $stdout.puts generator\n      end","language":"ruby"},"RDoc::SourceCodeAccess#source_code_location":{"!":"method","declarations":["instance","public"],"path":"RDoc::SourceCodeAccess#source_code_location","name":"source_code_location","namespace":"RDoc::SourceCodeAccess","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"source_code_location()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/rdoc_ext.rb","line":66,"source":"# File lib/shomen-rdoc/rdoc_ext.rb, line 66\n  def source_code_location\n    src = source_code_raw\n    if md = %rFile (.*?), line (\\d+)/.match(src)\n      file = md[1]\n      line = md[2]\n    else\n      file = \"(unknown)\"\n      line = 0\n    end\n    return file, line\n  end","language":"ruby"},"RDoc::SourceCodeAccess#source_code_raw":{"!":"method","declarations":["instance","public"],"path":"RDoc::SourceCodeAccess#source_code_raw","name":"source_code_raw","namespace":"RDoc::SourceCodeAccess","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"source_code_raw()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/rdoc_ext.rb","line":54,"source":"# File lib/shomen-rdoc/rdoc_ext.rb, line 54\n  def source_code_raw\n    return '' unless @token_stream\n    src = \"\"\n    @token_stream.each do |t|\n      next unless t\n      src << t.text\n    end\n    #add_line_numbers(src)\n    src\n  end","language":"ruby"},"Shomen::Rdoc::Generator#table":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Generator#table","name":"table","namespace":"Shomen::Rdoc::Generator","comment":"The hash object that is used to store the generated \ndocumentation.\n\nReturns documentation table. [Hash]","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"table()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/generator.rb","line":89,"source":"# File lib/shomen-rdoc/generator.rb, line 89\n      def table\n        @table\n      end","language":"ruby"},"RDoc::TopLevel#to_h":{"!":"method","declarations":["instance","public"],"path":"RDoc::TopLevel#to_h","name":"to_h","namespace":"RDoc::TopLevel","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"to_h()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/rdoc_ext.rb","line":5,"source":"# File lib/shomen-rdoc/rdoc_ext.rb, line 5\n  def to_h\n    {\n       :path     => path,\n       :name     => base_name,\n       :fullname => full_name,\n       :rootname => absolute_name,\n       :modified => last_modified,\n       :diagram  => diagram\n    }\n  end","language":"ruby"},"Shomen::Rdoc::Generator#use_cache?":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Generator#use_cache?","name":"use_cache?","namespace":"Shomen::Rdoc::Generator","comment":"Use pre-existant cache instead of regenerating documentation.\n\nReturns true/false.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"use_cache?()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/generator.rb","line":60,"source":"# File lib/shomen-rdoc/generator.rb, line 60\n      def use_cache?\n        @use_cache\n      end","language":"ruby"},"RDoc::ClassModule#with_documentation?":{"!":"method","declarations":["instance","public"],"path":"RDoc::ClassModule#with_documentation?","name":"with_documentation?","namespace":"RDoc::ClassModule","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"with_documentation?()","arguments":[]}],"returns":[],"file":"/lib/shomen-rdoc/rdoc_ext.rb","line":25,"source":"# File lib/shomen-rdoc/rdoc_ext.rb, line 25\n  def with_documentation?\n    document_self_or_methods || classes_and_modules.any?{ |c| c.with_documentation? }\n  end","language":"ruby"},"Shomen::Rdoc::Command#options":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Command#options","name":"options","namespace":"Shomen::Rdoc::Command","comment":"Command line options.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"options","arguments":[{"name":"options"}]}],"returns":[],"file":"/(unknown)","line":0,"source":"","language":"ruby"},"Shomen::Rdoc::Generator#store":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Generator#store","name":"store","namespace":"Shomen::Rdoc::Generator","comment":"Location to of RDoc documentation cache. This defaults to `.rdoc` which is\nwhere RDoc normally places it's generated documentation files.\n\nReturns String path to RDoc documentation cache.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"store","arguments":[{"name":"store"}]}],"returns":[],"file":"/(unknown)","line":0,"source":"","language":"ruby"},"Shomen::Rdoc::Generator#use_cache":{"!":"method","declarations":["instance","public"],"path":"Shomen::Rdoc::Generator#use_cache","name":"use_cache","namespace":"Shomen::Rdoc::Generator","comment":"Use pre-existant cache instead of regenerating documentation.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"use_cache","arguments":[{"name":"use_cache"}]}],"returns":[],"file":"/(unknown)","line":0,"source":"","language":"ruby"},"/HISTORY.rdoc":{"!":"document","path":"HISTORY.rdoc","name":"HISTORY.rdoc","created":"2012-04-20 12:44:44 -0400","modified":"2012-04-20 12:44:44 -0400","text":"= RELEASE HISTORY\n\n== 0.1.0 / 2012-04-20\n\nThis is the initial public release of Shomen RDoc, spun-off\nfrom the main Shomen library.\n\nPlease note that this utility is not in the best of shape \ndue to current issues with RDoc itself.\n\nChanges:\n\n* Happy Release Day!\n\n","format":"text/rdoc"},"/LICENSE.txt":{"!":"document","path":"LICENSE.txt","name":"LICENSE.txt","created":"2012-04-19 01:10:24 -0400","modified":"2012-04-19 01:10:24 -0400","text":"Shomen RDoc - Shomen Generator via RDoc Documentation\n(http://github.com/rubyworks/shomen-rdoc)\n\nCopyright (c) 2011 Rubyworks. All rights reserved. \n\nRedistribution and use in source and binary forms,\nwith or without modification, are permitted provided that the following\nconditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nSPDX License: BSD-2-Clause\n\n","format":"text/plain"},"/MANIFEST.txt":{"!":"document","path":"MANIFEST.txt","name":"MANIFEST.txt","created":"2012-04-20 11:49:38 -0400","modified":"2012-04-20 11:49:38 -0400","text":"#!mast .ruby .yardopts bin lib spec test [A-Z]*.*\n.ruby\nbin/shomen-rdoc\nlib/shomen-rdoc/command.rb\nlib/shomen-rdoc/generator.rb\nlib/shomen-rdoc/rdoc_ext.rb\nlib/shomen-rdoc.rb\nlib/shomen-rdoc.yml\nspec/02_class.rdoc\nspec/03_module.rdoc\nspec/04_constant.rdoc\nspec/05_method.rdoc\nspec/10_interface_overloading.rdoc\nspec/applique/ae.rb\nspec/applique/shomen.rb\nspec/fixture/lib/example.rb\nHISTORY.rdoc\nLICENSE.txt\nREADME.rdoc\n","format":"text/plain"},"/README.rdoc":{"!":"document","path":"README.rdoc","name":"README.rdoc","created":"2012-04-18 18:17:30 -0400","modified":"2012-04-18 18:17:30 -0400","text":"= Shomen RDoc\n\nThe Shomen RDoc utility is a utility to generate Shomen standard documentation \nvia RDoc's documentation cache (usually stored in `.rdoc`). This is an aternative\nto using the rdoc-shomen format, which is an RDoc plugin rather then a stand alone\ntool.\n","format":"text/rdoc"},"/lib/shomen-rdoc.rb":{"!":"script","path":"lib/shomen-rdoc.rb","name":"shomen-rdoc.rb","created":"2012-04-20 11:19:59 -0400","modified":"2012-04-20 11:19:47 -0400","requires":["yaml","shomen-model","shomen-rdoc/generator","shomen-rdoc/command"],"constants":[],"modules":[],"classes":[],"methods":[]},"/lib/shomen-rdoc/command.rb":{"!":"script","path":"lib/shomen-rdoc/command.rb","name":"command.rb","created":"2012-04-20 08:26:35 -0400","modified":"2012-04-20 08:26:35 -0400","requires":["optparse"],"constants":[],"modules":[],"classes":[],"methods":[]},"/lib/shomen-rdoc/generator.rb":{"!":"script","path":"lib/shomen-rdoc/generator.rb","name":"generator.rb","created":"2012-04-20 12:43:13 -0400","modified":"2012-04-20 12:43:13 -0400","requires":["rdoc","shomen-rdoc/rdoc_ext"],"constants":[],"modules":[],"classes":[],"methods":[]},"/lib/shomen-rdoc/rdoc_ext.rb":{"!":"script","path":"lib/shomen-rdoc/rdoc_ext.rb","name":"rdoc_ext.rb","created":"2012-04-20 11:18:04 -0400","modified":"2012-04-19 08:20:46 -0400","requires":["rdoc"],"constants":[],"modules":[],"classes":[],"methods":[]}}